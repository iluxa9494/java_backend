package com.skillbox.cryptobot.service;

import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.stereotype.Service;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.bots.AbsSender;

import java.math.BigDecimal;


@Slf4j
@Service
@RequiredArgsConstructor
public class NotificationService {

    @Qualifier("cryptoBot")
    private final AbsSender telegramBot;

    /**
     * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ —Ü–µ–ª–µ–≤–æ–π —Ü–µ–Ω—ã BTC
     */
    public void sendPriceAlert(Long chatId, BigDecimal currentPrice) {
        String messageText = "üì¢ –ü–æ—Ä–∞ –ø–æ–∫—É–ø–∞—Ç—å, —Å—Ç–æ–∏–º–æ—Å—Ç—å –±–∏—Ç–∫–æ–∏–Ω–∞ " + currentPrice + " USD";

        SendMessage message = new SendMessage();
        message.setChatId(chatId.toString());
        message.setText(messageText);

        try {
            telegramBot.execute(message);
            log.info("–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {}: {}", chatId, messageText);
        } catch (Exception e) {
            log.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {}: ", chatId, e);
        }
    }
}