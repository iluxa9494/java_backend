version: '3.8'

services:

  currency_exchange:
    build: ./currency_exchange
    container_name: currency_exchange
    env_file:
      - ./currency_exchange/.env
    ports:
      - "8080:8080"
    depends_on:
      - postgres_currency
    networks:
      - backend_net

  postgres_currency:
    image: postgres:15
    container_name: postgres_currency
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: currency
    ports:
      - "5433:5432"
    volumes:
      - currency_postgres_data:/var/lib/postgresql/data
    networks:
      - backend_net

  hotel_booking:
    build: ./hotel-booking
    container_name: hotel_booking
    env_file:
      - ./hotel-booking/.env
    ports:
      - "8081:8080"
    depends_on:
      - kafka
      - mongodb
      - postgres_hotel
    networks:
      - kafka_net
      - backend_net

  postgres_hotel:
    image: postgres:15
    container_name: postgres_hotel
    restart: always
    environment:
      POSTGRES_USER: hotel_admin
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: hotel_booking
    ports:
      - "5434:5432"
    volumes:
      - hotel_postgres_data:/var/lib/postgresql/data
    networks:
      - backend_net

  mongodb:
    image: mongo
    container_name: mongodb
    ports:
      - "27017:27017"
    networks:
      - kafka_net

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - kafka_net

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - kafka_net

  searchengine:
    build: ./searchengine
    container_name: searchengine
    env_file:
      - ./searchengine/.env
    ports:
      - "8082:8080"
    depends_on:
      - mysql_search
    networks:
      - backend_net

  mysql_search:
    image: mysql:8.0
    container_name: mysql_search
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: password123
      MYSQL_DATABASE: search_engine
    volumes:
      - mysql_search_data:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - backend_net

  tg_bot:
    build: ./tg_bot
    container_name: tg_bot
    env_file:
      - ./tg_bot/.env
    ports:
      - "8083:8080"
    depends_on:
      - postgres_bot
    networks:
      - backend_net

  postgres_bot:
    image: postgres:15
    container_name: postgres_bot
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-bot_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secure_password}
      POSTGRES_DB: cryptobot
    ports:
      - "5435:5432"
    volumes:
      - bot_postgres_data:/var/lib/postgresql/data
    networks:
      - backend_net

  vk_insight:
    build: ./vk_insight
    container_name: vk_insight
    env_file:
      - ./vk_insight/.env
    ports:
      - "8084:8084"
    depends_on:
      - mysql_vk
    networks:
      - backend_net

  mysql_vk:
    image: mysql:8.0
    container_name: mysql_vk
    ports:
      - "3308:3306"
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: vk_insight
    volumes:
      - mysql_vk_data:/var/lib/mysql
    networks:
      - backend_net

volumes:
  currency_postgres_data:
  hotel_postgres_data:
  mysql_search_data:
  bot_postgres_data:
  mysql_vk_data:

networks:
  backend_net:
  kafka_net:
